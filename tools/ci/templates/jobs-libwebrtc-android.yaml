# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# [TEMPLATE] Compile libwebrtc on Android

parameters:
- name: buildConfig
  type: string
  default: ''
  values:
  - fulldebug
  - debug
  - release

jobs:

# Compile libwebrtc
- job: libwebrtc_${{parameters.buildConfig}}
  timeoutInMinutes: 360
  pool:
    vmImage: 'ubuntu-18.04'
  variables:
    toolsDir: '$(Build.SourcesDirectory)/tools/build'
    workDir: '$(Build.SourcesDirectory)/external/libwebrtc'
  steps:

  - bash: df -h
    displayName: 'Available Disk Space'

  - bash: |
      echo "List all packages in reverse sorted order by their installed size (MB):"
      dpkg-query --show --showformat='${Installed-Size}\t${Package}\n' | sort -rh | awk '{print $1/1024, $2}'
      echo "-----------------------------------------------------------------"
      echo "List all packages in alphabetical order (including version numbers):"
      apt list --installed
    displayName: 'List installed packages'

  # Clean the base image to recover disk space
  - template: steps-linux-clean-image.yaml

  - bash: df -h
    displayName: 'Available Disk Space'

  # # Checkout MixedReality-WebRTC
  # - checkout: self
  #   clean: $(clean.git)

  # # Checkout libwebrtc
  # - script: |
  #     cd $(toolsDir)/libwebrtc
  #     ./config.sh -v -d $(workDir) -b "branch-heads/71" -t android -c arm64 -s -f
  #     ./checkout.sh -v
  #   displayName: 'Checkout libwebrtc'

  # # Build libwebrtc
  # - script: |
  #     cd $(toolsDir)/libwebrtc
  #     ./build.sh -v -c ${{parameters.buildConfig}}
  #   displayName: 'Build libwebrtc'

  # # Build mrwebrtc
  # - script: |
  #     cd $(toolsDir)/android
  #     /gradlew assembleRelease
  #   displayName: 'Build mrwebrtc'

  # # Stage artifacts
  # - task: CopyFiles@2
  #   displayName: 'Stage mrwebrtc artifacts'
  #   inputs:
  #     sourceFolder: '$(toolsDir)/android/webrtc-native/build/outputs/aar'
  #     contents: 'mrwebrtc.aar'
  #     targetFolder: '$(Build.ArtifactStagingDirectory)'

  # # Publish mrwebrtc.dll and mrwebrtc.pdb
  # - task: PublishPipelineArtifact@0
  #   displayName: 'Publish mrwebrtc'
  #   inputs:
  #     artifactName: 'mrwebrtc_android_arm64_release'
  #     targetPath: '$(Build.ArtifactStagingDirectory)'
